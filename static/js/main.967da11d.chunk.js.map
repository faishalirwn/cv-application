{"version":3,"sources":["components/CVInput.js","components/CVPaper.js","App.js","index.js"],"names":["CVInput","props","handleValueChange","bind","handleArrayValueChange","handleFormAddition","handleFormDeletion","key","e","this","onValueChange","target","value","section","index","type","checked","console","log","onArrayValueChange","onFormAddition","onFormDeletion","cvContent","htmlFor","placeholder","onChange","name","address","phone","email","linkedin","github","summary","cols","rows","work","map","form","i","autoComplete","id","role","company","from","to","desc","onClick","education","enroll","className","field","school","country","year","gpa","Component","CVPaper","App","state","preview","handlePreviewSwitch","handleExample","setState","currentSection","push","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.967da11d.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport \"../styles/CVInput.css\";\n\nclass CVInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleArrayValueChange = this.handleArrayValueChange.bind(this);\n    this.handleFormAddition = this.handleFormAddition.bind(this);\n    this.handleFormDeletion = this.handleFormDeletion.bind(this);\n  }\n\n  handleValueChange(key, e) {\n    this.props.onValueChange(key, e.target.value);\n  }\n\n  handleArrayValueChange(section, key, index, e) {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    console.log(value);\n    this.props.onArrayValueChange(section, key, value, index);\n  }\n\n  handleFormAddition(section) {\n    this.props.onFormAddition(section);\n  }\n\n  handleFormDeletion(section, index) {\n    this.props.onFormDeletion(section, index);\n  }\n\n  render() {\n    const cvContent = this.props.cvContent;\n    return (\n      <div>\n        <section>\n          <h2>General Info</h2>\n          <p>\n            <label htmlFor=\"name\">Name: </label>\n            <input\n              type=\"text\"\n              placeholder=\"Saitama\"\n              onChange={this.handleValueChange.bind(this, \"name\")}\n              value={cvContent.name}\n            />\n          </p>\n          <p>\n            <label htmlFor=\"address\">Address: </label>\n            <input\n              type=\"text\"\n              placeholder=\"San Fransisco, CA\"\n              onChange={this.handleValueChange.bind(this, \"address\")}\n              value={cvContent.address}\n            />\n          </p>\n          <p>\n            <label htmlFor=\"phone\">Phone Number: </label>\n            <input\n              type=\"text\"\n              placeholder=\"+14162241527\"\n              onChange={this.handleValueChange.bind(this, \"phone\")}\n              value={cvContent.phone}\n            />\n          </p>\n          <p>\n            <label htmlFor=\"email\">Email: </label>\n            <input\n              type=\"text\"\n              placeholder=\"saitama@opm.com\"\n              onChange={this.handleValueChange.bind(this, \"email\")}\n              value={cvContent.email}\n            />\n          </p>\n          <p>\n            <label htmlFor=\"linkedin\">Linkedin: </label>\n            <input\n              type=\"text\"\n              placeholder=\"linkedin.com/in/saitama\"\n              onChange={this.handleValueChange.bind(this, \"linkedin\")}\n              value={cvContent.linkedin}\n            />\n          </p>\n          <p>\n            <label htmlFor=\"github\">Github: </label>\n            <input\n              type=\"text\"\n              placeholder=\"github.com/saitama\"\n              onChange={this.handleValueChange.bind(this, \"github\")}\n              value={cvContent.github}\n            />\n          </p>\n        </section>\n\n        <section>\n          <h2>Summary</h2>\n          <textarea\n            placeholder=\"I have dived in web development especially front-end for almost 2 years since 2017. I entered the programming world in 2018. I'm interested in learning computer science in order to become a solid software engineer. In that regard, I’m eager to build something that could have good impacts on the lives of others.\"\n            onChange={this.handleValueChange.bind(this, \"summary\")}\n            value={cvContent.summary}\n            cols=\"30\"\n            rows=\"10\"\n          ></textarea>\n        </section>\n\n        <section>\n          <h2>Work Experience</h2>\n          {cvContent.work.map((form, i) => {\n            return (\n              <div key={i}>\n                <p>\n                  <label htmlFor={`role_${i}`}>Role: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"work\",\n                      \"role\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"Software Engineer\"\n                    autoComplete=\"off\"\n                    id={`role_${i}`}\n                    value={cvContent.work[i].role}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`company_${i}`}>Company Name: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"work\",\n                      \"company\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"Azamon\"\n                    autoComplete=\"off\"\n                    id={`company_${i}`}\n                    value={cvContent.work[i].company}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`work_from_${i}`}>From: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"work\",\n                      \"from\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"August 2019\"\n                    autoComplete=\"off\"\n                    id={`work_from_${i}`}\n                    value={cvContent.work[i].from}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`work_to_${i}`}>To: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"work\",\n                      \"to\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"July 2029\"\n                    autoComplete=\"off\"\n                    id={`work_to_${i}`}\n                    value={cvContent.work[i].to}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`desc_${i}`}>Description: </label>\n                  <textarea\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"work\",\n                      \"desc\",\n                      i\n                    )}\n                    id={`desc_${i}`}\n                    value={cvContent.work[i].desc}\n                    placeholder=\"Part of Technology departement. For backend tasks, we are using Node and GraphQL. As for frontend tasks, we are using React.\"\n                    cols=\"30\"\n                    rows=\"10\"\n                  ></textarea>\n                </p>\n                <button onClick={this.handleFormDeletion.bind(this, \"work\", i)}>\n                  Delete\n                </button>\n              </div>\n            );\n          })}\n          <button onClick={this.handleFormAddition.bind(this, \"work\")}>\n            Add\n          </button>\n        </section>\n\n        <section>\n          <h2>Education</h2>\n          {cvContent.education.map((form, i) => {\n            return (\n              <div key={i}>\n                <p>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"enroll\",\n                      i\n                    )}\n                    type=\"checkbox\"\n                    id={`enroll_${i}`}\n                    value={cvContent.education[i].enroll}\n                  />\n                  <label className=\"checkbox-label\" htmlFor={`enroll_${i}`}>\n                    Currently Enrolling\n                  </label>\n                </p>\n                <p>\n                  <label htmlFor={`field_${i}`}>Field/Degree: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"field\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"Computer Science\"\n                    autoComplete=\"off\"\n                    id={`field_${i}`}\n                    value={cvContent.education[i].field}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`school_${i}`}>\n                    School/University Name:{\" \"}\n                  </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"school\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"Harvard University\"\n                    autoComplete=\"off\"\n                    id={`school_${i}`}\n                    value={cvContent.education[i].school}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`country_${i}`}>Country: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"country\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"US\"\n                    autoComplete=\"off\"\n                    id={`country_${i}`}\n                    value={cvContent.education[i].country}\n                  />\n                </p>\n                {cvContent.education[i].enroll && (\n                  <p>\n                    <label htmlFor={`year_${i}`}>Year: </label>\n                    <input\n                      onChange={this.handleArrayValueChange.bind(\n                        this,\n                        \"education\",\n                        \"year\",\n                        i\n                      )}\n                      type=\"text\"\n                      placeholder=\"4th\"\n                      autoComplete=\"off\"\n                      id={`year_${i}`}\n                      value={cvContent.education[i].year}\n                    />\n                  </p>\n                )}\n                <p>\n                  <label htmlFor={`gpa_${i}`}>\n                    {cvContent.education[i].enroll ? \"Current\" : \"\"} GPA:\n                  </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"gpa\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"4.0\"\n                    autoComplete=\"off\"\n                    id={`gpa_${i}`}\n                    value={cvContent.education[i].gpa}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`education_from_${i}`}>From: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"from\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"2017\"\n                    autoComplete=\"off\"\n                    id={`education_from_${i}`}\n                    value={cvContent.education[i].from}\n                  />\n                </p>\n                <p>\n                  <label htmlFor={`education_to_${i}`}>To: </label>\n                  <input\n                    onChange={this.handleArrayValueChange.bind(\n                      this,\n                      \"education\",\n                      \"to\",\n                      i\n                    )}\n                    type=\"text\"\n                    placeholder=\"2020\"\n                    autoComplete=\"off\"\n                    id={`education_to_${i}`}\n                    value={cvContent.education[i].to}\n                  />\n                </p>\n                <button\n                  onClick={this.handleFormDeletion.bind(this, \"education\", i)}\n                >\n                  Delete\n                </button>\n              </div>\n            );\n          })}\n          <button onClick={this.handleFormAddition.bind(this, \"education\")}>\n            Add\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default CVInput;\n","import { Component } from \"react\";\n\nclass CVPaper extends Component {\n  render() {\n    const cvContent = this.props.cvContent;\n    return (\n      <div>\n        <section>\n          <div>\n            <h3>{cvContent.name}</h3>\n            <p>{cvContent.address}</p>\n            <p>Phone: {cvContent.phone}</p>\n            <p>Email: {cvContent.email}</p>\n            <p>Linkedin: {cvContent.linkedin}</p>\n            {cvContent.github !== \"\" && <p>Github: {cvContent.github}</p>}\n          </div>\n        </section>\n        <section>\n          <h2>Summary</h2>\n          <p>{cvContent.summary}</p>\n        </section>\n        <section>\n          <h2>Work Experience</h2>\n          <ul>\n            {cvContent.work.map((form, i) => {\n              return (\n                <li key={i}>\n                  <p>\n                    {form.role} at {form.company}, {form.from} to {form.to}\n                  </p>\n                  <p>{form.desc}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n        <section>\n          <h2>Education</h2>\n          <ul>\n            {cvContent.education.map((form, i) => {\n              return (\n                <li key={i}>\n                  <p>\n                    {form.field}, {form.school}, {form.country}\n                  </p>\n                  <p>\n                    {form.year ? `${form.year} year. ` : \"\"} {form.from} -{\" \"}\n                    {form.to}{\" \"}\n                  </p>\n                  {form.gpa !== \"\" && (\n                    <p>\n                      {form.enroll ? \"Current\" : \"\"} GPA: {form.gpa}\n                    </p>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default CVPaper;\n","import { Component } from \"react\";\nimport \"./styles//App.css\";\nimport CVInput from \"./components/CVInput\";\nimport CVPaper from \"./components/CVPaper\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      preview: false,\n      cvContent: {\n        name: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        linkedin: \"\",\n        github: \"\",\n        summary: \"\",\n        work: [\n          {\n            role: \"\",\n            company: \"\",\n            from: \"\",\n            to: \"\",\n            desc: \"\",\n          },\n        ],\n        education: [\n          {\n            enroll: false,\n            field: \"\",\n            school: \"\",\n            country: \"\",\n            gpa: \"\",\n            from: \"\",\n            to: \"\",\n            year: \"\",\n          },\n        ],\n      },\n    };\n\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleArrayValueChange = this.handleArrayValueChange.bind(this);\n    this.handleFormAddition = this.handleFormAddition.bind(this);\n    this.handleFormDeletion = this.handleFormDeletion.bind(this);\n    this.handlePreviewSwitch = this.handlePreviewSwitch.bind(this);\n    this.handleExample = this.handleExample.bind(this);\n  }\n\n  handleValueChange(key, value) {\n    this.setState({\n      cvContent: {\n        ...this.state.cvContent,\n        [key]: value,\n      },\n    });\n    console.log(this.state.cvContent);\n  }\n\n  handleArrayValueChange(section, key, value, index) {\n    let currentSection = this.state.cvContent[section];\n    currentSection[index][key] = value;\n    this.setState({\n      cvContent: {\n        ...this.state.cvContent,\n        [section]: currentSection,\n      },\n    });\n    console.log(this.state.cvContent);\n  }\n\n  handleFormAddition(section) {\n    let currentSection = this.state.cvContent[section];\n    currentSection.push({});\n    this.setState({\n      cvContent: {\n        ...this.state.cvContent,\n        [section]: currentSection,\n      },\n    });\n  }\n\n  handleFormDeletion(section, index) {\n    let currentSection = this.state.cvContent[section];\n    currentSection.splice(index, 1);\n    this.setState({\n      cvContent: {\n        ...this.state.cvContent,\n        [section]: currentSection,\n      },\n    });\n  }\n\n  handlePreviewSwitch() {\n    this.setState({ preview: !this.state.preview });\n  }\n\n  handleExample() {\n    this.setState({\n      cvContent: {\n        name: \"Saitama\",\n        address: \"San Fransisco, CA\",\n        phone: \"+14162241527\",\n        email: \"saitama@opm.com\",\n        linkedin: \"linkedin.com/in/saitama\",\n        github: \"github.com/saitama\",\n        summary:\n          \"I have dived in web development especially front-end for almost 2 years since 2017. I entered the programming world in 2018. I'm interested in learning computer science in order to become a solid software engineer. In that regard, I’m eager to build something that could have good impacts on the lives of others.\",\n        work: [\n          {\n            role: \"Software Engineer\",\n            company: \"Azamon\",\n            from: \"August 2019\",\n            to: \"July 2029\",\n            desc:\n              \"Part of Technology departement. For backend tasks, we are using Node and GraphQL. As for frontend tasks, we are using React.\",\n          },\n          {\n            role: \"Front End Developer\",\n            company: \"Guguru\",\n            from: \"August 2018\",\n            to: \"July 2019\",\n            desc: \"Part of Management.\",\n          },\n        ],\n        education: [\n          {\n            enroll: true,\n            field: \"Computer Science\",\n            school: \"Harvard University\",\n            country: \"US\",\n            gpa: \"4.0\",\n            from: \"2017\",\n            to: \"2020\",\n            year: \"4th\",\n          },\n          {\n            enroll: false,\n            field: \"Mechanical Engineering\",\n            school: \"Harvard University\",\n            country: \"US\",\n            gpa: \"3.9\",\n            from: \"2014\",\n            to: \"2017\",\n          },\n        ],\n      },\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>\n          <div id=\"container\">\n            <p>CV Maker</p>\n            <nav>\n              <button onClick={this.handleExample}>👁👄👁Load Example</button>\n              <button onClick={this.handlePreviewSwitch}>\n                {this.state.preview ? \"✏️Edit\" : \"🚀Preview\"}\n              </button>\n            </nav>\n          </div>\n        </header>\n        <div className=\"App\">\n          {this.state.preview ? (\n            <CVPaper cvContent={this.state.cvContent} />\n          ) : (\n            <CVInput\n              onValueChange={this.handleValueChange}\n              onArrayValueChange={this.handleArrayValueChange}\n              onFormAddition={this.handleFormAddition}\n              onFormDeletion={this.handleFormDeletion}\n              cvContent={this.state.cvContent}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}